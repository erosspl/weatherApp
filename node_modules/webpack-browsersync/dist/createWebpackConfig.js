'use strict';

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _plugins = require('./webpack-config/plugins');

var _plugins2 = _interopRequireDefault(_plugins);

var _styles = require('./webpack-config/styles');

var _styles2 = _interopRequireDefault(_styles);

var _scripts = require('./webpack-config/scripts');

var _scripts2 = _interopRequireDefault(_scripts);

var _images = require('./webpack-config/images');

var _images2 = _interopRequireDefault(_images);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createWebpackConfig(config) {
  var basePath = config.basePath;
  var distDir = config.distDir;
  var srcDir = config.srcDir;
  var isProduction = config.isProduction;
  var isDevelopment = config.isDevelopment;
  var vendor = config.vendor;
  var mainModule = config.mainModule;
  var target = config.target;
  var name = config.name;
  var debug = config.debug;
  var hot = config.hot;
  var productionSourceMaps = config.productionSourceMaps;


  var distPath = config.distPath = _path2.default.join(basePath, distDir);
  var srcPath = config.srcPath = _path2.default.join(basePath, srcDir);

  var hashType = isProduction ? 'chunkhash' : 'hash';

  // more info:https://webpack.github.io/docs/build-performance.html#sourcemaps
  // and https://webpack.github.io/docs/configuration.html#devtool
  var devtool = 'cheap-module-eval-source-map';

  if (isProduction && productionSourceMaps) {
    devtool = 'source-map';
  }

  var main = './' + srcDir + '/' + mainModule;
  var entryApp = [main];

  if (isDevelopment && hot) {
    entryApp = [_path2.default.resolve(__dirname, '../node_modules/webpack-hot-middleware/client'), main];
  }

  var webpackConfig = {
    debug: debug,
    noInfo: true, // set to false to see a list of every file being bundled.
    devtool: devtool,
    target: target,
    name: name,
    entry: {
      app: entryApp,
      vendor: vendor
    },
    output: {
      filename: '[name].[' + hashType + '].js',
      path: distPath,
      publicPath: ''
    },
    resolve: {
      root: srcPath,
      extensions: ['', '.js'],
      fallback: _path2.default.join(__dirname, 'node_modules')
    },
    plugins: [],
    module: {
      loaders: [],
      preLoaders: []
    },
    resolveLoader: {
      modulesDirectories: ['web_loaders', 'web_modules', 'node_loaders', 'node_modules', _path2.default.resolve(__dirname, '../node_modules')]
    }
  };

  (0, _plugins2.default)(webpackConfig, config);
  (0, _styles2.default)(webpackConfig, config);
  (0, _scripts2.default)(webpackConfig, config);
  (0, _images2.default)(webpackConfig, config);

  return webpackConfig;
}

module.exports = createWebpackConfig;